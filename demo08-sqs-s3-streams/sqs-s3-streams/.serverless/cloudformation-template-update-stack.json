{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "ServerlessDeploymentBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        }
      }
    },
    "ServerlessDeploymentBucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "ServerlessDeploymentBucket"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Effect": "Deny",
              "Principal": "*",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "/*"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      }
                    ]
                  ]
                }
              ],
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": false
                }
              }
            }
          ]
        }
      }
    },
    "S3listenerLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/tooling-s3-sqs-dev-s3listener"
      }
    },
    "SqslistenerLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/tooling-s3-sqs-dev-sqslistener"
      }
    },
    "IamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "tooling-s3-sqs",
                  "dev",
                  "lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/tooling-s3-sqs-dev*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/tooling-s3-sqs-dev*:*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "sqs:SendMessage",
                    "sqs:GetQueueUrl",
                    "sqs:CreateQueue",
                    "sqs:ReceiveMessage"
                  ],
                  "Resource": {
                    "Fn::GetAtt": [
                      "SQSQueue",
                      "Arn"
                    ]
                  }
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "s3:*"
                  ],
                  "Resource": [
                    "arn:aws:s3:::arquivos-0010-yan/*",
                    "arn:aws:s3:::arquivos-0010-yan"
                  ]
                }
              ]
            }
          }
        ],
        "Path": "/",
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "tooling-s3-sqs",
              "dev",
              {
                "Ref": "AWS::Region"
              },
              "lambdaRole"
            ]
          ]
        }
      }
    },
    "S3listenerLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/tooling-s3-sqs/dev/1613232408253-2021-02-13T16:06:48.253Z/s3listener.zip"
        },
        "Handler": "src/index.s3listener",
        "Runtime": "nodejs12.x",
        "FunctionName": "tooling-s3-sqs-dev-s3listener",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "BUCKET_NAME": "arquivos-0010-yan",
            "SQS_QUEUE": "file-handler"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "S3listenerLogGroup"
      ]
    },
    "SqslistenerLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/tooling-s3-sqs/dev/1613232408253-2021-02-13T16:06:48.253Z/sqslistener.zip"
        },
        "Handler": "src/index.sqslistener",
        "Runtime": "nodejs12.x",
        "FunctionName": "tooling-s3-sqs-dev-sqslistener",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "BUCKET_NAME": "arquivos-0010-yan",
            "SQS_QUEUE": "file-handler"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "SqslistenerLogGroup"
      ]
    },
    "S3listenerLambdaVersionm9f4qM4ftRBSrzpXIs43rWmeQ263XGcxbe4sL14alik": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "S3listenerLambdaFunction"
        },
        "CodeSha256": "9soqyaCUnWuUEPTCN3mM3LU0rkhn+qmTJ1LMZgp6pZg="
      }
    },
    "SqslistenerLambdaVersionR7VDv8dDGMnvJY6wUKUfo5Jcotl8pThV7DoedXBWs": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "SqslistenerLambdaFunction"
        },
        "CodeSha256": "9soqyaCUnWuUEPTCN3mM3LU0rkhn+qmTJ1LMZgp6pZg="
      }
    },
    "SQSQueue": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "QueueName": "file-handler",
        "VisibilityTimeout": 60
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": {
        "Ref": "ServerlessDeploymentBucket"
      }
    },
    "S3listenerLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "S3listenerLambdaVersionm9f4qM4ftRBSrzpXIs43rWmeQ263XGcxbe4sL14alik"
      }
    },
    "SqslistenerLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "SqslistenerLambdaVersionR7VDv8dDGMnvJY6wUKUfo5Jcotl8pThV7DoedXBWs"
      }
    }
  }
}